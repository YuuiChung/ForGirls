<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping package="cn.it.shop.model">
    <class name="Forder" table="forder">
        <id name="id" type="java.lang.Integer">
            <column name="id" />
            <generator class="native" />
        </id>
        <property name="name" type="java.lang.String">
            <column name="name" length="20" />
        </property>
        <property name="phone" type="java.lang.String">
            <column name="phone" length="20" />
        </property>
        <property name="remark" type="java.lang.String">
            <column name="remark" length="20" />
        </property>
        <property name="date" type="java.sql.Timestamp">
            <column name="date" length="19" />
        </property>
        <property name="total" type="java.math.BigDecimal">
            <column name="total" precision="8" />
        </property>
        <property name="post" type="java.lang.String">
            <column name="post" length="20" />
        </property>
        <property name="address" type="java.lang.String">
            <column name="address" length="200" />
        </property>
        <many-to-one name="user" class="User">
        	<column name="uid"></column>
        </many-to-one>
        <many-to-one name="status" class="Status">
        	<column name="sid"></column>
        </many-to-one>
        
         <!-- 订单与订单项是一对多的关系 
           name: 当前对象的属性名称
           key: 代表的是外键
                                  由于set的类型为: Sorder,因此会到对应的sorder表中查找 fid,吧匹配的fid相应的sorder查询出来
           bag: list替代方案,所有流程与list相同但是可以不用设置index
           
           lazy="true" fetch="join": 此参数是针对查询而言
           
           inverse="false" cascade="all" 此参数是针对更新(删除、添加、更新)而言
            
           inverse 建议配置true: 对方来维护外键(外键在哪张表,就哪张表维护)  
           inverse: false  则主表来维护 子表的外键,此时会通过发update语句来更新外键 ,此时会多发N条update语句
           
            Hibernate: insert into shop.forder (name, phone, remark, date, total, post, address, uid, sid) values (?, ?, ?, ?, ?, ?, ?, ?, ?)
		    Hibernate: insert into shop.sorder (name, price, number, pid) values (?, ?, ?, ?)
			Hibernate: insert into shop.sorder (name, price, number, pid) values (?, ?, ?, ?)
			Hibernate: insert into shop.sorder (name, price, number, pid) values (?, ?, ?, ?)
			Hibernate: update shop.sorder set fid=? where id=?
			Hibernate: update shop.sorder set fid=? where id=?
			Hibernate: update shop.sorder set fid=? where id=?
			
			Student student=new Student();
			student.setName("admin");
			student.setGrade(new Grade(1));
			
			解决方案: 要建立 sorder与forder的关联对象   sorder.setForder(forder)
           
       
			<bag name="sorderList" inverse="true" cascade="all">
				<key>
					<column name="fid" />
				</key>
				<one-to-many class="Sorder"/>
			</bag>
         -->
         
        <list name="sorderList" lazy="true" fetch="join" cascade="all" inverse="true">
        	<!-- 代表的是外键 -->
        	<key>
        		<column name="fid"></column>
        	</key>
        	<index column="index_"></index>
        	<one-to-many class="Sorder"/>
        </list>
    </class>
</hibernate-mapping>
